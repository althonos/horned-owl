Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)
Prefix(family:=<http://example.com/owl/families/>)
Prefix(family-other:=<http://homepages.cs.ncl.ac.uk/phillip.lord/scratch/family-other.owl#>)
Ontology(<http://example.com/owl/families/>
    Import(<http://homepages.cs.ncl.ac.uk/phillip.lord/scratch/family-other.owl#>)
    Declaration(Class(family:Adult))
    Declaration(Class(family:ChildlessPerson))
    Declaration(Class(family:Dead))
    Declaration(Class(family:Father))
    Declaration(Class(family:Female))
    Declaration(Class(family:Grandfather))
    Declaration(Class(family:HappyPerson))
    Declaration(Class(family:Human))
    Declaration(Class(family:JohnsChildren))
    Declaration(Class(family:Man))
    Declaration(Class(family:Mother))
    Declaration(Class(family:MyBirthdayGuests))
    Declaration(Class(family:NarcisticPerson))
    Declaration(Class(family:Orphan))
    Declaration(Class(family:Parent))
    Declaration(Class(family:Person))
    Declaration(Class(family:SocialRole))
    Declaration(Class(family:Teenager))
    Declaration(Class(family:Woman))
    Declaration(Class(family:YoungChild))
    Declaration(Class(<http://homepages.cs.ncl.ac.uk/phillip.lord/scratch/family-other.owl#Grownup>))
    Declaration(ObjectProperty(family:hasAncestor))
    Declaration(ObjectProperty(family:hasBrother))
    Declaration(ObjectProperty(family:hasChild))
    Declaration(ObjectProperty(family:hasDaughter))
    Declaration(ObjectProperty(family:hasFather))
    Declaration(ObjectProperty(family:hasGrandparent))
    Declaration(ObjectProperty(family:hasHusband))
    Declaration(ObjectProperty(family:hasParent))
    Declaration(ObjectProperty(family:hasRelative))
    Declaration(ObjectProperty(family:hasSon))
    Declaration(ObjectProperty(family:hasSpouse))
    Declaration(ObjectProperty(family:hasUncle))
    Declaration(ObjectProperty(family:hasWife))
    Declaration(ObjectProperty(family:loves))
    Declaration(ObjectProperty(family:parentOf))
    Declaration(ObjectProperty(<http://homepages.cs.ncl.ac.uk/phillip.lord/scratch/family-other.owl#child>))
    Declaration(DataProperty(family:hasAge))
    Declaration(DataProperty(family:hasSSN))
    Declaration(DataProperty(<http://homepages.cs.ncl.ac.uk/phillip.lord/scratch/family-other.owl#age>))
    Declaration(NamedIndividual(family:Bill))
    Declaration(NamedIndividual(family:Father))
    Declaration(NamedIndividual(family:Jack))
    Declaration(NamedIndividual(family:James))
    Declaration(NamedIndividual(family:Jim))
    Declaration(NamedIndividual(family:John))
    Declaration(NamedIndividual(family:Mary))
    Declaration(NamedIndividual(family:Meg))
    Declaration(NamedIndividual(family:Susan))
    Declaration(NamedIndividual(<http://homepages.cs.ncl.ac.uk/phillip.lord/scratch/family-other.owl#JohnBrown>))
    Declaration(NamedIndividual(<http://homepages.cs.ncl.ac.uk/phillip.lord/scratch/family-other.owl#MaryBrown>))
    Declaration(Datatype(family:majorAge))
    Declaration(Datatype(family:minorAge))
    Declaration(Datatype(family:personAge))
    Declaration(Datatype(family:toddlerAge))
    TransitiveObjectProperty(family:hasAncestor)
    EquivalentObjectProperties(family:hasChild <http://homepages.cs.ncl.ac.uk/phillip.lord/scratch/family-other.owl#child>)
    InverseObjectProperties(family:hasChild family:hasParent)
    AsymmetricObjectProperty(family:hasChild)
    DisjointObjectProperties(family:hasDaughter family:hasSon)
    SubObjectPropertyOf(family:hasFather family:hasParent)
    FunctionalObjectProperty(family:hasHusband)
    InverseFunctionalObjectProperty(family:hasHusband)
    DisjointObjectProperties(family:hasParent family:hasSpouse)
    ReflexiveObjectProperty(family:hasRelative)
    SymmetricObjectProperty(family:hasSpouse)
    SubObjectPropertyOf(family:hasWife family:hasSpouse)
    ObjectPropertyDomain(family:hasWife family:Man)
    ObjectPropertyRange(family:hasWife family:Woman)
    IrreflexiveObjectProperty(family:parentOf)
    EquivalentDataProperties(family:hasAge <http://homepages.cs.ncl.ac.uk/phillip.lord/scratch/family-other.owl#age>)
    FunctionalDataProperty(family:hasAge)
    DataPropertyDomain(family:hasAge family:Person)
    DataPropertyRange(family:hasAge xsd:nonNegativeInteger)
    DatatypeDefinition(family:majorAge DataIntersectionOf(family:personAge DataComplementOf(family:minorAge)))
    DatatypeDefinition(family:minorAge DatatypeRestriction(xsd:integer xsd:minInclusive "0"^^xsd:integer xsd:maxInclusive "18"^^xsd:integer))
    DatatypeDefinition(family:personAge DatatypeRestriction(xsd:integer xsd:minInclusive "0"^^xsd:integer xsd:maxInclusive "150"^^xsd:integer))
    DatatypeDefinition(family:toddlerAge DataOneOf("1"^^xsd:integer "2"^^xsd:integer))
    EquivalentClasses(family:Adult <http://homepages.cs.ncl.ac.uk/phillip.lord/scratch/family-other.owl#Grownup>)
    EquivalentClasses(family:ChildlessPerson ObjectIntersectionOf(family:Person ObjectComplementOf(family:Parent)))
    SubClassOf(family:ChildlessPerson ObjectIntersectionOf(family:Person ObjectComplementOf(ObjectSomeValuesFrom(ObjectInverseOf(family:hasParent) owl:Thing))))
    SubClassOf(family:Father ObjectIntersectionOf(family:Man family:Parent))
    SubClassOf(family:Grandfather ObjectIntersectionOf(family:Man family:Parent))
    EquivalentClasses(family:HappyPerson ObjectIntersectionOf(ObjectSomeValuesFrom(family:hasChild family:HappyPerson) ObjectAllValuesFrom(family:hasChild family:HappyPerson)))
    EquivalentClasses(family:Human family:Person)
    EquivalentClasses(family:JohnsChildren ObjectHasValue(family:hasParent family:John))
    SubClassOf(Annotation(rdfs:comment "States that every man is a person"@en) family:Man family:Person)
    DisjointClasses(family:Man family:Woman)
    EquivalentClasses(family:Mother ObjectIntersectionOf(family:Parent family:Woman))
    SubClassOf(family:Mother family:Woman)
    EquivalentClasses(family:MyBirthdayGuests ObjectOneOf(family:Bill family:John family:Mary))
    EquivalentClasses(family:NarcisticPerson ObjectHasSelf(family:loves))
    EquivalentClasses(family:Orphan ObjectAllValuesFrom(ObjectInverseOf(family:hasChild) family:Dead))
    EquivalentClasses(family:Parent ObjectUnionOf(family:Father family:Mother))
    EquivalentClasses(family:Parent ObjectSomeValuesFrom(family:hasChild family:Person))
    AnnotationAssertion(rdfs:comment family:Person "Represents the set of all people."@en)
    SubClassOf(family:Teenager DataSomeValuesFrom(family:hasAge DatatypeRestriction(xsd:integer xsd:minExclusive "12"^^xsd:integer xsd:maxExclusive "19"^^xsd:integer)))
    SubClassOf(family:Woman family:Person)
    SubClassOf(Annotation(rdfs:comment "States that every woman in a person"@en) family:Woman family:Person)
    NegativeObjectPropertyAssertion(family:hasDaughter family:Bill family:Susan)
    NegativeObjectPropertyAssertion(family:hasWife family:Bill family:Mary)
    ClassAssertion(family:SocialRole family:Father)
    ClassAssertion(family:Person family:Jack)
    ClassAssertion(ObjectComplementOf(family:Parent) family:Jack)
    NegativeDataPropertyAssertion(family:hasAge family:Jack "53"^^xsd:integer)
    SameIndividual(family:James family:Jim)
    ClassAssertion(family:Father family:John)
    ClassAssertion(ObjectMinCardinality(2 family:hasChild family:Parent) family:John)
    ClassAssertion(ObjectExactCardinality(3 family:hasChild family:Parent) family:John)
    ClassAssertion(ObjectExactCardinality(5 family:hasChild) family:John)
    ClassAssertion(ObjectMaxCardinality(4 family:hasChild family:Parent) family:John)
    SameIndividual(family:John <http://homepages.cs.ncl.ac.uk/phillip.lord/scratch/family-other.owl#JohnBrown>)
    ObjectPropertyAssertion(family:hasWife family:John family:Mary)
    DataPropertyAssertion(family:hasAge family:John "51"^^xsd:integer)
    ClassAssertion(family:Person family:Mary)
    ClassAssertion(family:Woman family:Mary)
    SameIndividual(family:Mary <http://homepages.cs.ncl.ac.uk/phillip.lord/scratch/family-other.owl#MaryBrown>)
    SubClassOf(ObjectIntersectionOf(family:Female ObjectOneOf(family:Bill family:Mary family:Meg)) ObjectIntersectionOf(family:Parent ObjectAllValuesFrom(family:hasChild family:Female) ObjectMaxCardinality(1 family:hasChild)))
    DisjointClasses(family:Father family:Mother family:YoungChild)
    DifferentIndividuals(family:Bill family:John)
    SubObjectPropertyOf(ObjectPropertyChain(family:hasFather family:hasBrother) family:hasUncle)
    SubObjectPropertyOf(ObjectPropertyChain(family:hasParent family:hasParent) family:hasGrandparent)
    HasKey(family:Person () (family:hasSSN))
)